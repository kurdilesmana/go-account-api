version: "3.8"

services:
    postgres:
        container_name: postgres
        image: postgres:14.2
        env_file:
            - .env
        ports:
            - "5432:5432"
        volumes:
            - dbdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5

    account:
        container_name: account
        build:
            context: .
            dockerfile: /apps/account/Dockerfile
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy # waiting until heathcheck of postgres is good
        ports:
            - "3000:3000"

    gl:
        container_name: gl
        build:
            context: .
            dockerfile: /apps/gl/Dockerfile
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy # waiting until heathcheck of postgres is good
        ports:
            - "3001:3001"

    zookeeper:
        env_file:
            - .env
        image: bitnami/zookeeper
        expose:
            - "2181"
        ports:
            - "2181:2181"

    kafka:
        image: bitnami/kafka
        env_file:
            - .env
        depends_on:
            - zookeeper
        ports:
            - '9092:9092'
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_BROKER_ID: 1

volumes:
    dbdata: # persist database
